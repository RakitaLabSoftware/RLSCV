name: build

on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*"

jobs:
  build:
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest]
        poetry-version: ["1.1.15"]
        python-version: ['3.11']
      
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - uses: actions/cache@v3
        name: Define a cache for the virtual environment based on the dependencies lock file
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}
      - name: Install the project dependencies
        run: poetry install
      - name: Run the automated tests (for example)
        run: poetry run pytest -v
  
  gh-release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - name: Set up Venv
        run: |
          python -m venv .venv
          source .venv/bin/activate
      
      - name: Install Dependecies
        run: |
          pip install --upgrade pip
          pip install -e ".[dev]"

      - name: Format and sort
        run: |
          black .
          isort .

      - name: Build package
        run: python -m build
      
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: LICENSE
  
  pypi-publish:
    needs: gh-release
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - name: Set up Venv
        run: |
          python -m venv .venv
          source .venv/bin/activate
      
      - name: Install Dependecies
        run: |
          pip install --upgrade pip
          pip install -e ".[dev]"

      - name: Format and sort
        run: |
          black .
          isort .

      - name: Build package
        run: python -m build

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1.8
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
